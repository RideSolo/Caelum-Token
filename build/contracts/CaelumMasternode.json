{
  "contractName": "CaelumMasternode",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "deleteMasternode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_contract_miner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardsProofOfWork",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_arrangeMasternodeFlow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getUserFromID",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_genesis",
          "type": "address"
        },
        {
          "name": "_team",
          "type": "bool"
        }
      ],
      "name": "addGenesis",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "updateMasternode",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masternodeCandidate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "updateMasternodeAsTeamMember",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "closeGenesis",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "miningEpoch",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setMiningContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "contractProgress",
      "outputs": [
        {
          "name": "epoch",
          "type": "uint256"
        },
        {
          "name": "candidate",
          "type": "uint256"
        },
        {
          "name": "round",
          "type": "uint256"
        },
        {
          "name": "miningepoch",
          "type": "uint256"
        },
        {
          "name": "globalreward",
          "type": "uint256"
        },
        {
          "name": "powreward",
          "type": "uint256"
        },
        {
          "name": "masternodereward",
          "type": "uint256"
        },
        {
          "name": "usercount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "addMasternode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "masternodeByIndex",
      "outputs": [
        {
          "name": "accountOwner",
          "type": "address"
        },
        {
          "name": "isActive",
          "type": "bool"
        },
        {
          "name": "isTeamMember",
          "type": "bool"
        },
        {
          "name": "storedIndex",
          "type": "uint256"
        },
        {
          "name": "startingRound",
          "type": "uint256"
        },
        {
          "name": "nodeCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setMasternodeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "calculateRewardStructures",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masternodeRound",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "userByAddress",
      "outputs": [
        {
          "name": "accountOwner",
          "type": "address"
        },
        {
          "name": "isActive",
          "type": "bool"
        },
        {
          "name": "isTeamMember",
          "type": "bool"
        },
        {
          "name": "storedIndex",
          "type": "uint256"
        },
        {
          "name": "startingRound",
          "type": "uint256"
        },
        {
          "name": "nodeCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "isMasternodeOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "getLastPerUser",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_contract_masternode",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "getLastActiveBy",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "userHasActiveNodes",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "setMasternodeCandidate",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_contract",
          "type": "address"
        }
      ],
      "name": "setTokenContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFollowingCandidate",
      "outputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_contract_token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "belongsToUser",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINING_PHASE_DURATION_BLOCKS",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rewardsMasternode",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "masternodeIDcounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "masternodeInfo",
      "outputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "bool"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "userCounter",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "candidateAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "NewMasternode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "candidateAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "timeStamp",
          "type": "uint256"
        }
      ],
      "name": "RemovedMasternode",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_externalArrangeFlow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_received",
          "type": "address"
        }
      ],
      "name": "_externalAddMasternode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_received",
          "type": "address"
        }
      ],
      "name": "_externalStopMasternode",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getMiningReward",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getDataFromContract",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6080604052600060065560006007556000600855611194600a556000600e60006101000a81548160ff021916908315150217905550737600bf5112945f9f006c216d5d6db0df2806edc6600e60016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600e60156101000a81548160ff0219169083151502179055506000600e60166101000a81548160ff021916908315150217905550737600bf5112945f9f006c216d5d6db0df2806edc6600f60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061243d806101636000396000f300608060405260043610610203576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062822599146102085780630de33210146102355780631ad93a9b1461028c5780632730e4a2146102b75780632debc549146102ce578063372210d11461033b5780633a74c05b1461038a578063448a0017146103cf578063490203a7146103fa5780634e56925f1461042557806355e97e931461048057806364ef6dd414610497578063702f5321146104c2578063715018a6146105055780637558d81e1461051c5780637d394f90146105785780638319ebfb146105bb5780638d114dd3146106535780638da5cb5b146106965780638f88a00e146106ed57806390ce082214610704578063989e5ea91461072f5780639fc75354146107dd578063a042d43e14610838578063a73c52e71461084f578063aad5b4ae146108a6578063acdee567146108fd578063b6da1fbe14610954578063bb8bedc9146109af578063bbcd5bbe14610a06578063bd8a79d514610a49578063be550be414610aa0578063c325ae4e14610af7578063c56280b114610b8f578063d230df6a14610bd2578063d632cb3e14610c15578063e1eca32714610c40578063e6f76fe814610c6b578063e7a6651814610c96578063eae445ed14610cc1578063f0c37a5914610d47578063f2fde38b14610d72575b600080fd5b34801561021457600080fd5b5061023360048036038101908080359060200190929190505050610db5565b005b34801561024157600080fd5b5061024a610f3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029857600080fd5b506102a1610f60565b6040518082815260200191505060405180910390f35b3480156102c357600080fd5b506102cc610f66565b005b3480156102da57600080fd5b506102f960048036038101908080359060200190929190505050610f8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034757600080fd5b50610388600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610fcb565b005b34801561039657600080fd5b506103b56004803603810190808035906020019092919050505061100c565b604051808215151515815260200191505060405180910390f35b3480156103db57600080fd5b506103e461103d565b6040518082815260200191505060405180910390f35b34801561040657600080fd5b5061040f611043565b6040518082815260200191505060405180910390f35b34801561043157600080fd5b50610466600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110b565b604051808215151515815260200191505060405180910390f35b34801561048c57600080fd5b50610495611171565b005b3480156104a357600080fd5b506104ac61118e565b6040518082815260200191505060405180910390f35b3480156104ce57600080fd5b50610503600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611194565b005b34801561051157600080fd5b5061051a611233565b005b34801561052857600080fd5b50610531611335565b604051808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b34801561058457600080fd5b506105b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061137a565b005b3480156105c757600080fd5b506105e660048036038101908080359060200190929190505050611649565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018615151515815260200185151515158152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561065f57600080fd5b50610694600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116bf565b005b3480156106a257600080fd5b506106ab61175e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f957600080fd5b50610702611783565b005b34801561071057600080fd5b50610719611834565b6040518082815260200191505060405180910390f35b34801561073b57600080fd5b50610770600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061183a565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018615151515815260200185151515158152602001848152602001838152602001828152602001965050505050505060405180910390f35b3480156107e957600080fd5b5061081e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b0565b604051808215151515815260200191505060405180910390f35b34801561084457600080fd5b5061084d6119ae565b005b34801561085b57600080fd5b50610890600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119b8565b6040518082815260200191505060405180910390f35b3480156108b257600080fd5b506108bb611a63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090957600080fd5b5061093e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a89565b6040518082815260200191505060405180910390f35b34801561096057600080fd5b50610995600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2a565b604051808215151515815260200191505060405180910390f35b3480156109bb57600080fd5b506109c4611bcc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a1257600080fd5b50610a47600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d96565b005b348015610a5557600080fd5b50610a5e611e35565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610aac57600080fd5b50610ab5611f14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b0357600080fd5b50610b38600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f3a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b7b578082015181840152602081019050610b60565b505050509050019250505060405180910390f35b348015610b9b57600080fd5b50610bd0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd4565b005b348015610bde57600080fd5b50610c13600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fe8565b005b348015610c2157600080fd5b50610c2a611ff4565b6040518082815260200191505060405180910390f35b348015610c4c57600080fd5b50610c55611ffa565b6040518082815260200191505060405180910390f35b348015610c7757600080fd5b50610c80612000565b6040518082815260200191505060405180910390f35b348015610ca257600080fd5b50610cab612006565b6040518082815260200191505060405180910390f35b348015610ccd57600080fd5b50610cec600480360381019080803590602001909291905050506121b4565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018415151515815260200183815260200182815260200194505050505060405180910390f35b348015610d5357600080fd5b50610d5c612252565b6040518082815260200191505060405180910390f35b348015610d7e57600080fd5b50610db3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612258565b005b6000610dc082610f8b565b90506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555060006005600084815260200190815260200160002060000160146101000a81548160ff021916908315150217905550600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481101515610e9b57fe5b906000526020600020016000905560056000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556000820160156101000a81549060ff0219169055600182016000905560028201600090556003820160009055600482016000610f3491906123cb565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b610f6e611783565b610f76611bcc565b50600b60008154809291906001019190505550565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600e60009054906101000a900460ff16151515610fe757600080fd5b610ff08261137a565b600115158115151415611008576110068261110b565b505b5050565b6000600560008381526020019081526020016000206002016000815480929190600101919050555060019050919050565b60095481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663490203a76040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050506040513d60208110156110f557600080fd5b8101908080519060200190929190505050905090565b60006001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff02191690831515021790555060019050919050565b6001600e60006101000a81548160ff021916908315150217905550565b600b5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111ef57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561128e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000806000806000806000600954600854600b54611354611043565b600c54600d54600654879750975097509750975097509750975097509091929394959697565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555080600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160085401600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016007549080600181540180825580915050906001820390600052602060002001600090919290919091505550600160056000600754815260200190815260200160002060000160146101000a81548160ff0219169083151502179055508060056000600754815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754600560006007548152602001908152602001600020600101819055506001600854016005600060075481526020019081526020016000206002018190555060076000815480929190600101919050555060066000815480929190600101919050555050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16908060010154908060020154908060030154905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561171a57600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080611791611043565b9350600a8054600b548115156117a357fe5b04029250600a8310156117d35760056064858115156117be57fe5b0402600c819055506000600d8190555061182e565b605a83111561180d5760026064858115156117ea57fe5b0402600c81905550606260648581151561180057fe5b0402600d8190555061182e565b8260648581151561181a57fe5b04029150818403905061182d81836122bf565b5b50505050565b60085481565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16908060010154908060020154908060030154905086565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905011151561190957600090506119a9565b8173ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119a857600190506119a9565b5b919050565b6119b6610f66565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905003815481101515611a5157fe5b90600052602060002001549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008090505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040180549050811015611b2057600115156005600083815260200190815260200160002060000160149054906101000a900460ff1615151415611b13578091505b8080600101915050611a92565b8192505050919050565b60008060008090505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040180549050811015611bc257600115156005600083815260200190815260200160002060000160149054906101000a900460ff1615151415611bb557600191505b8080600101915050611b33565b8192505050919050565b60008060008091505b6000611bdf611e35565b73ffffffffffffffffffffffffffffffffffffffff161415611ca657600682101515611c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c73616665207377697463686564206f6e00000000000000000000000081525060200191505060405180910390fd5b6005821415611c855760009250611d91565b60016008540160088190555060006009819055508180600101925050611bd5565b6001600754036009541415611cca5760016008540160088190555060006009819055505b60095490505b600754811015611d80576005600082815260200190815260200160002060000160149054906101000a900460ff1615611d735760085460056000838152602001908152602001600020600201541415611d7257611d2c8161100c565b50806009819055506005600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250611d91565b5b8080600101915050611cd0565b600160085401600881905550600092505b505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611df157600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060085492506009549150600160075403821415611e5d57600183019250600091505b60095490505b600754811015611f03576005600082815260200190815260200160002060000160149054906101000a900460ff1615611ef6578260056000838152602001908152602001600020600201541415611ef5578091506005600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350611f0e565b5b8080600101915050611e63565b600183019250600093505b50505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015611fc857602002820191906000526020600020905b815481526020019060010190808311611fb4575b50505050509050919050565b611fe5611fe0826119b8565b610db5565b50565b611ff18161137a565b50565b600a5481565b600d5481565b60075481565b6000806000806000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561207057600080fd5b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1698508873ffffffffffffffffffffffffffffffffffffffff16637558d81e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161010060405180830381600087803b1580156120fa57600080fd5b505af115801561210e573d6000803e3d6000fd5b505050506040513d61010081101561212557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050975097509750975097509750975097508560088190555084600b8190555082600c8190555081600d8190555050505050505050505090565b6000806000806005600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600087815260200190815260200160002060000160149054906101000a900460ff166005600088815260200190815260200160002060010154600560008981526020019081526020016000206002015493509350935093509193509193565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122b357600080fd5b6122bc816122d1565b50565b80600d8190555081600c819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561230d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50805460008255906000526020600020908101906123e991906123ec565b50565b61240e91905b8082111561240a5760008160009055506001016123f2565b5090565b905600a165627a7a72305820ff5db0008992ee18e8bbd2aed704028071d628bab249a9cdbdbef82a722964690029",
  "deployedBytecode": "0x608060405260043610610203576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062822599146102085780630de33210146102355780631ad93a9b1461028c5780632730e4a2146102b75780632debc549146102ce578063372210d11461033b5780633a74c05b1461038a578063448a0017146103cf578063490203a7146103fa5780634e56925f1461042557806355e97e931461048057806364ef6dd414610497578063702f5321146104c2578063715018a6146105055780637558d81e1461051c5780637d394f90146105785780638319ebfb146105bb5780638d114dd3146106535780638da5cb5b146106965780638f88a00e146106ed57806390ce082214610704578063989e5ea91461072f5780639fc75354146107dd578063a042d43e14610838578063a73c52e71461084f578063aad5b4ae146108a6578063acdee567146108fd578063b6da1fbe14610954578063bb8bedc9146109af578063bbcd5bbe14610a06578063bd8a79d514610a49578063be550be414610aa0578063c325ae4e14610af7578063c56280b114610b8f578063d230df6a14610bd2578063d632cb3e14610c15578063e1eca32714610c40578063e6f76fe814610c6b578063e7a6651814610c96578063eae445ed14610cc1578063f0c37a5914610d47578063f2fde38b14610d72575b600080fd5b34801561021457600080fd5b5061023360048036038101908080359060200190929190505050610db5565b005b34801561024157600080fd5b5061024a610f3a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561029857600080fd5b506102a1610f60565b6040518082815260200191505060405180910390f35b3480156102c357600080fd5b506102cc610f66565b005b3480156102da57600080fd5b506102f960048036038101908080359060200190929190505050610f8b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561034757600080fd5b50610388600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050610fcb565b005b34801561039657600080fd5b506103b56004803603810190808035906020019092919050505061100c565b604051808215151515815260200191505060405180910390f35b3480156103db57600080fd5b506103e461103d565b6040518082815260200191505060405180910390f35b34801561040657600080fd5b5061040f611043565b6040518082815260200191505060405180910390f35b34801561043157600080fd5b50610466600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061110b565b604051808215151515815260200191505060405180910390f35b34801561048c57600080fd5b50610495611171565b005b3480156104a357600080fd5b506104ac61118e565b6040518082815260200191505060405180910390f35b3480156104ce57600080fd5b50610503600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611194565b005b34801561051157600080fd5b5061051a611233565b005b34801561052857600080fd5b50610531611335565b604051808981526020018881526020018781526020018681526020018581526020018481526020018381526020018281526020019850505050505050505060405180910390f35b34801561058457600080fd5b506105b9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061137a565b005b3480156105c757600080fd5b506105e660048036038101908080359060200190929190505050611649565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018615151515815260200185151515158152602001848152602001838152602001828152602001965050505050505060405180910390f35b34801561065f57600080fd5b50610694600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506116bf565b005b3480156106a257600080fd5b506106ab61175e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106f957600080fd5b50610702611783565b005b34801561071057600080fd5b50610719611834565b6040518082815260200191505060405180910390f35b34801561073b57600080fd5b50610770600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061183a565b604051808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018615151515815260200185151515158152602001848152602001838152602001828152602001965050505050505060405180910390f35b3480156107e957600080fd5b5061081e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118b0565b604051808215151515815260200191505060405180910390f35b34801561084457600080fd5b5061084d6119ae565b005b34801561085b57600080fd5b50610890600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119b8565b6040518082815260200191505060405180910390f35b3480156108b257600080fd5b506108bb611a63565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561090957600080fd5b5061093e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a89565b6040518082815260200191505060405180910390f35b34801561096057600080fd5b50610995600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b2a565b604051808215151515815260200191505060405180910390f35b3480156109bb57600080fd5b506109c4611bcc565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610a1257600080fd5b50610a47600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611d96565b005b348015610a5557600080fd5b50610a5e611e35565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610aac57600080fd5b50610ab5611f14565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610b0357600080fd5b50610b38600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f3a565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610b7b578082015181840152602081019050610b60565b505050509050019250505060405180910390f35b348015610b9b57600080fd5b50610bd0600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fd4565b005b348015610bde57600080fd5b50610c13600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fe8565b005b348015610c2157600080fd5b50610c2a611ff4565b6040518082815260200191505060405180910390f35b348015610c4c57600080fd5b50610c55611ffa565b6040518082815260200191505060405180910390f35b348015610c7757600080fd5b50610c80612000565b6040518082815260200191505060405180910390f35b348015610ca257600080fd5b50610cab612006565b6040518082815260200191505060405180910390f35b348015610ccd57600080fd5b50610cec600480360381019080803590602001909291905050506121b4565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018415151515815260200183815260200182815260200194505050505060405180910390f35b348015610d5357600080fd5b50610d5c612252565b6040518082815260200191505060405180910390f35b348015610d7e57600080fd5b50610db3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612258565b005b6000610dc082610f8b565b90506000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555060006005600084815260200190815260200160002060000160146101000a81548160ff021916908315150217905550600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040182815481101515610e9b57fe5b906000526020600020016000905560056000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff02191690556000820160156101000a81549060ff0219169055600182016000905560028201600090556003820160009055600482016000610f3491906123cb565b50505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b610f6e611783565b610f76611bcc565b50600b60008154809291906001019190505550565b60006005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600e60009054906101000a900460ff16151515610fe757600080fd5b610ff08261137a565b600115158115151415611008576110068261110b565b505b5050565b6000600560008381526020019081526020016000206002016000815480929190600101919050555060019050919050565b60095481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663490203a76040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156110cb57600080fd5b505af11580156110df573d6000803e3d6000fd5b505050506040513d60208110156110f557600080fd5b8101908080519060200190929190505050905090565b60006001600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160156101000a81548160ff02191690831515021790555060019050919050565b6001600e60006101000a81548160ff021916908315150217905550565b600b5481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156111ef57600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561128e57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482060405160405180910390a260008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000806000806000806000600954600854600b54611354611043565b600c54600d54600654879750975097509750975097509750975097509091929394959697565b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160146101000a81548160ff02191690831515021790555080600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600160085401600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016007549080600181540180825580915050906001820390600052602060002001600090919290919091505550600160056000600754815260200190815260200160002060000160146101000a81548160ff0219169083151502179055508060056000600754815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600754600560006007548152602001908152602001600020600101819055506001600854016005600060075481526020019081526020016000206002018190555060076000815480929190600101919050555060066000815480929190600101919050555050565b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16908060010154908060020154908060030154905086565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561171a57600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600080611791611043565b9350600a8054600b548115156117a357fe5b04029250600a8310156117d35760056064858115156117be57fe5b0402600c819055506000600d8190555061182e565b605a83111561180d5760026064858115156117ea57fe5b0402600c81905550606260648581151561180057fe5b0402600d8190555061182e565b8260648581151561181a57fe5b04029150818403905061182d81836122bf565b5b50505050565b60085481565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060000160149054906101000a900460ff16908060000160159054906101000a900460ff16908060010154908060020154908060030154905086565b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905011151561190957600090506119a9565b8173ffffffffffffffffffffffffffffffffffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156119a857600190506119a9565b5b919050565b6119b6610f66565b565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004016001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018054905003815481101515611a5157fe5b90600052602060002001549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060008090505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040180549050811015611b2057600115156005600083815260200190815260200160002060000160149054906101000a900460ff1615151415611b13578091505b8080600101915050611a92565b8192505050919050565b60008060008090505b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040180549050811015611bc257600115156005600083815260200190815260200160002060000160149054906101000a900460ff1615151415611bb557600191505b8080600101915050611b33565b8192505050919050565b60008060008091505b6000611bdf611e35565b73ffffffffffffffffffffffffffffffffffffffff161415611ca657600682101515611c73576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4661696c73616665207377697463686564206f6e00000000000000000000000081525060200191505060405180910390fd5b6005821415611c855760009250611d91565b60016008540160088190555060006009819055508180600101925050611bd5565b6001600754036009541415611cca5760016008540160088190555060006009819055505b60095490505b600754811015611d80576005600082815260200190815260200160002060000160149054906101000a900460ff1615611d735760085460056000838152602001908152602001600020600201541415611d7257611d2c8161100c565b50806009819055506005600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169250611d91565b5b8080600101915050611cd0565b600160085401600881905550600092505b505090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611df157600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060008060085492506009549150600160075403821415611e5d57600183019250600091505b60095490505b600754811015611f03576005600082815260200190815260200160002060000160149054906101000a900460ff1615611ef6578260056000838152602001908152602001600020600201541415611ef5578091506005600082815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169350611f0e565b5b8080600101915050611e63565b600183019250600093505b50505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401805480602002602001604051908101604052809291908181526020018280548015611fc857602002820191906000526020600020905b815481526020019060010190808311611fb4575b50505050509050919050565b611fe5611fe0826119b8565b610db5565b50565b611ff18161137a565b50565b600a5481565b600d5481565b60075481565b6000806000806000806000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561207057600080fd5b600f60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1698508873ffffffffffffffffffffffffffffffffffffffff16637558d81e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161010060405180830381600087803b1580156120fa57600080fd5b505af115801561210e573d6000803e3d6000fd5b505050506040513d61010081101561212557600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050975097509750975097509750975097508560088190555084600b8190555082600c8190555081600d8190555050505050505050505090565b6000806000806005600086815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600087815260200190815260200160002060000160149054906101000a900460ff166005600088815260200190815260200160002060010154600560008981526020019081526020016000206002015493509350935093509193509193565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156122b357600080fd5b6122bc816122d1565b50565b80600d8190555081600c819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561230d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b50805460008255906000526020600020908101906123e991906123ec565b50565b61240e91905b8082111561240a5760008160009055506001016123f2565b5090565b905600a165627a7a72305820ff5db0008992ee18e8bbd2aed704028071d628bab249a9cdbdbef82a722964690029",
  "sourceMap": "145:1581:1:-;;;529:1:2;503:27;;571:1;537:35;;609:1;579:31;;700:4;657:47;;838:5;818:25;;;;;;;;;;;;;;;;;;;;7882:42;7858:66;;;;;;;;;;;;;;;;;;;;224:5:1;208:21;;;;;;;;;;;;;;;;;;;;252:5;236:21;;;;;;;;;;;;;;;;;;;;1099:42;1075:66;;;;;;;;;;;;;;;;;;;;436:10:12;428:5;;:18;;;;;;;;;;;;;;;;;;145:1581:1;;;;;;",
  "deployedSourceMap": "145:1581:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:323:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2565:323:2;;;;;;;;;;;;;;;;;;;;;;;;;;102:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;102:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;743::2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;743:30:2;;;;;;;;;;;;;;;;;;;;;;;6486:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6486:146:2;;;;;;7234:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7234:130:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;994:206:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2238:143;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2238:143:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;617:31:2;;;;;;;;;;;;;;;;;;;;;;;941:126:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:126:1;;;;;;;;;;;;;;;;;;;;;;;2389:168:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2389:168:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1208:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1208:91:2;;;;;;713:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;713:23:2;;;;;;;;;;;;;;;;;;;;;;;519:103:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;519:103:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;876:114:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:114:12;;;;;;7933:536:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7933:536:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:923;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1307:923:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;442:52;;8:9:-1;5:2;;;30:1;27;20:12;5:2;442:52:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;736:112:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;736:112:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;84:20:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;84:20:12;;;;;;;;;;;;;;;;;;;;;;;;;;;5553:785:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5553:785:2;;;;;;579:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;579:31:2;;;;;;;;;;;;;;;;;;;;;;;384:51;;8:9:-1;5:2;;;30:1;27;20:12;5:2;384:51:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6640:248;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6640:248:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;385:83:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;385:83:1;;;;;;7040:186:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7040:186:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;172:35:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;172:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2896:325:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2896:325:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3229:331;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3229:331:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3568:1255;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3568:1255:2;;;;;;;;;;;;;;;;;;;;;;;;;;;628:102:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:102:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4831:714:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4831:714:2;;;;;;;;;;;;;;;;;;;;;;;;;;;137:30:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;137:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;6896:136:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6896:136:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6896:136:2;;;;;;;;;;;;;;;;;810:123:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;810:123:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:103;;8:9:-1;5:2;;;30:1;27;20:12;5:2;586:103:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:47:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:47:2;;;;;;;;;;;;;;;;;;;;;;;780:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;780:29:2;;;;;;;;;;;;;;;;;;;;;;;537:35;;8:9:-1;5:2;;;30:1;27;20:12;5:2;537:35:2;;;;;;;;;;;;;;;;;;;;;;;1150:571:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1150:571:1;;;;;;;;;;;;;;;;;;;;;;;7467:383:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7467:383:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;503:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:27:2;;;;;;;;;;;;;;;;;;;;;;;1158:105:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1158:105:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:323:2;2622:19;2644:21;2658:6;2644:13;:21::i;:::-;2622:43;;2714:5;2676:13;:26;2690:11;2676:26;;;;;;;;;;;;;;;:35;;;:43;;;;;;;;;;;;;;;;;;2767:5;2730:17;:25;2748:6;2730:25;;;;;;;;;;;:34;;;:42;;;;;;;;;;;;;;;;;;2790:13;:26;2804:11;2790:26;;;;;;;;;;;;;;;:39;;2830:6;2790:47;;;;;;;;;;;;;;;;;2783:54;;;2855:17;:25;2873:6;2855:25;;;;;;;;;;;;2848:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2565:323;;:::o;102:30:3:-;;;;;;;;;;;;;:::o;743::2:-;;;;:::o;6486:146::-;6538:27;:25;:27::i;:::-;6576:24;:22;:24::i;:::-;;6611:11;;:13;;;;;;;;;;;;;6486:146::o;7234:130::-;7291:7;7318:17;:25;7336:6;7318:25;;;;;;;;;;;:38;;;;;;;;;;;;7311:45;;7234:130;;;:::o;994:206::-;1071:12;;;;;;;;;;;1070:13;1062:22;;;;;;;;1097:23;1111:8;1097:13;:23::i;:::-;1146:4;1137:13;;:5;:13;;;1133:60;;;1153:38;1182:8;1153:28;:38::i;:::-;;1133:60;994:206;;:::o;2238:143::-;2293:4;2310:17;:25;2328:6;2310:25;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;2369:4;2362:11;;2238:143;;;:::o;617:31::-;;;;:::o;941:126:1:-;988:4;1025:15;;;;;;;;;;;1012:45;;;:47;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1012:47:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1012:47:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1012:47:1;;;;;;;;;;;;;;;;1005:54;;941:126;:::o;2389:168:2:-;2463:4;2521;2480:13;:25;2494:10;2480:25;;;;;;;;;;;;;;;:38;;;:45;;;;;;;;;;;;;;;;;;2544:4;2536:13;;2389:168;;;:::o;1208:91::-;1265:4;1250:12;;:19;;;;;;;;;;;;;;;;;;1208:91::o;713:23::-;;;;:::o;519:103:3:-;587:5:12;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;607:9:3;589:15;;:27;;;;;;;;;;;;;;;;;;519:103;:::o;876:114:12:-;587:5;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;953:5;;;;;;;;;;;934:25;;;;;;;;;;;;982:1;966:5;;:18;;;;;;;;;;;;;;;;;;876:114::o;7933:536:2:-;7997:10;8018:14;8043:10;8064:16;8091:17;8119:14;8144:21;8176:14;8236:1;8252:19;;8286:15;;8316:11;;8342:17;:15;:17::i;:::-;8374:18;;8407:17;;8439:11;;8214:247;;;;;;;;;;;;;;;;;;;7933:536;;;;;;;;:::o;1307:923::-;1571:4;1534:13;:25;1548:10;1534:25;;;;;;;;;;;;;;;:34;;;:41;;;;;;;;;;;;;;;;;;1627:10;1586:13;:25;1600:10;1586:25;;;;;;;;;;;;;;;:38;;;:51;;;;;;;;;;;;;;;;;;1688:19;;1648:13;:25;1662:10;1648:25;;;;;;;;;;;;;;;:37;;:59;;;;1778:1;1760:15;;:19;1718:13;:25;1732:10;1718:25;;;;;;;;;;;;;;;:39;;:61;;;;1790:13;:25;1804:10;1790:25;;;;;;;;;;;;;;;:38;;1834:19;;1790:64;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1790:64:2;;;;;;;;;;;;;;;;;;;;;;1917:4;1867:17;:38;1885:19;;1867:38;;;;;;;;;;;:47;;;:54;;;;;;;;;;;;;;;;;;1986:10;1932:17;:38;1950:19;;1932:38;;;;;;;;;;;:51;;;:64;;;;;;;;;;;;;;;;;;2060:19;;2007:17;:38;2025:19;;2007:38;;;;;;;;;;;:50;;:72;;;;2163:1;2145:15;;:19;2090:17;:38;2108:19;;2090:38;;;;;;;;;;;:52;;:74;;;;2177:19;;:21;;;;;;;;;;;;;2209:11;;:13;;;;;;;;;;;;;1307:923;:::o;442:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;736:112:3:-;587:5:12;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;833:9:3;810:20;;:32;;;;;;;;;;;;;;;;;;736:112;:::o;84:20:12:-;;;;;;;;;;;;;:::o;5553:785:2:-;5629:26;5686:21;6151:14;6227:15;5658:17;:15;:17::i;:::-;5629:46;;5755:2;5724:28;;5710:11;;:42;;;;;;;;:47;5686:71;;5793:2;5774:16;:21;5770:163;;;5863:1;5857:3;5833:21;:27;;;;;;;;:31;5812:18;:52;;;;5899:1;5879:17;:21;;;;5915:7;;5770:163;5968:2;5949:16;:21;5945:194;;;6038:1;6032:3;6008:21;:27;;;;;;;;:31;5987:18;:52;;;;6104:2;6098:3;6074:21;:27;;;;;;;;:32;6054:17;:52;;;;6121:7;;5945:194;6200:16;6193:3;6169:21;:27;;;;;;;;6168:48;6151:65;;6270:9;6246:21;:33;6227:53;;6293:37;6308:10;6320:9;6293:14;:37::i;:::-;5553:785;;;;;:::o;579:31::-;;;;:::o;384:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6640:248::-;6707:4;6776:1;6727:13;:25;6741:10;6727:25;;;;;;;;;;;;;;;:38;;:45;;;;:50;;6724:67;;;6786:5;6779:12;;;;6724:67;6848:10;6806:52;;:13;:25;6820:10;6806:25;;;;;;;;;;;;;;;:38;;;;;;;;;;;;:52;;;6802:78;;;6876:4;6869:11;;;;6802:78;6640:248;;;;:::o;385:83:1:-;436:24;:22;:24::i;:::-;385:83::o;7040:186:2:-;7105:4;7129:13;:25;7143:10;7129:25;;;;;;;;;;;;;;;:38;;7216:1;7168:13;:25;7182:10;7168:25;;;;;;;;;;;;;;;:38;;:45;;;;:49;7129:89;;;;;;;;;;;;;;;;;;7122:96;;7040:186;;;:::o;172:35:3:-;;;;;;;;;;;;;:::o;2896:325:2:-;2962:4;2981:14;3011:6;3018:1;3011:8;;3006:181;3023:13;:25;3037:10;3023:25;;;;;;;;;;;;;;;:38;;:45;;;;3021:1;:47;3006:181;;;3126:4;3093:37;;:17;:20;3111:1;3093:20;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;3089:87;;;3161:1;3149:13;;3089:87;3071:3;;;;;;;3006:181;;;3204:9;3197:16;;2896:325;;;;;:::o;3229:331::-;3298:4;3317:14;3347:6;3354:1;3347:8;;3342:184;3359:13;:25;3373:10;3359:25;;;;;;;;;;;;;;;:38;;:45;;;;3357:1;:47;3342:184;;;3462:4;3429:37;;:17;:20;3447:1;3429:20;;;;;;;;;;;:29;;;;;;;;;;;;:37;;;3425:90;;;3497:4;3485:16;;3425:90;3407:3;;;;;;;3342:184;;;3543:9;3536:16;;3229:331;;;;;:::o;3568:1255::-;3617:7;3639:21;4356:6;3663:1;3639:25;;3677:496;3711:3;3684:23;:21;:23::i;:::-;:30;;;3677:496;;;3863:1;3844:16;:20;3836:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:1;4005:16;:21;4001:37;;;4036:1;4028:10;;;;4001:37;4089:1;4071:15;;:19;4053:15;:37;;;;4127:1;4105:19;:23;;;;4143:18;;;;;;;3677:496;;;4234:1;4212:19;;:23;4189:19;;:46;4185:154;;;4288:1;4270:15;;:19;4252:15;:37;;;;4326:1;4304:19;:23;;;;4185:154;4365:19;;4356:28;;4351:392;4390:19;;4386:1;:23;4351:392;;;4435:17;:20;4453:1;4435:20;;;;;;;;;;;:29;;;;;;;;;;;;4431:301;;;4527:15;;4489:17;:20;4507:1;4489:20;;;;;;;;;;;:34;;;:53;4485:232;;;4567:19;4584:1;4567:16;:19::i;:::-;;4631:1;4609:19;:23;;;;4663:17;:20;4681:1;4663:20;;;;;;;;;;;:33;;;;;;;;;;;;4655:42;;;;4485:232;4431:301;4411:3;;;;;;;4351:392;;;4791:1;4773:15;;:19;4755:15;:37;;;;4811:1;4803:10;;3568:1255;;;;:::o;628:102:3:-;587:5:12;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;715:9:3;697:15;;:27;;;;;;;;;;;;;;;;;;628:102;:::o;4831:714:2:-;4884:16;4913:13;4955:17;5150:6;4929:15;;4913:31;;4975:19;;4955:39;;5049:1;5027:19;;:23;5011:12;:39;5007:126;;;5089:1;5078:8;:12;5067:23;;5120:1;5105:16;;5007:126;5159:19;;5150:28;;5145:336;5184:19;;5180:1;:23;5145:336;;;5229:17;:20;5247:1;5229:20;;;;;;;;;;;:29;;;;;;;;;;;;5225:245;;;5321:8;5283:17;:20;5301:1;5283:20;;;;;;;;;;;:34;;;:46;5279:176;;;5369:1;5354:16;;5401:17;:20;5419:1;5401:20;;;;;;;;;;;:33;;;;;;;;;;;;5393:42;;;;5279:176;5225:245;5205:3;;;;;;;5145:336;;;5515:1;5504:8;:12;5493:23;;5535:1;5527:10;;4831:714;;;;;:::o;137:30:3:-;;;;;;;;;;;;;:::o;6896:136:2:-;6960:6;6986:13;:25;7000:10;6986:25;;;;;;;;;;;;;;;:38;;6979:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6896:136;;;:::o;810:123:1:-;882:43;899:25;914:9;899:14;:25::i;:::-;882:16;:43::i;:::-;810:123;:::o;586:103::-;657:24;671:9;657:13;:24::i;:::-;586:103;:::o;657:47:2:-;;;;:::o;780:29::-;;;;:::o;537:35::-;;;;:::o;1150:571:1:-;1207:4;1226:21;1293:10;1314:14;1339:10;1360:16;1387:17;1415:14;1440:21;1472:16;587:5:12;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;1267:13:1;;;;;;;;;;;1226:55;;1492:4;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1492:23:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1492:23:1;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1492:23:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1292:223;;;;;;;;;;;;;;;;1582:5;1564:15;:23;;;;1612:11;1598;:25;;;;1655:9;1634:18;:30;;;;1695:16;1675:17;:36;;;;1150:571;;;;;;;;;;:::o;7467:383:2:-;7540:7;7558:4;7573;7588;7638:17;:25;7656:6;7638:25;;;;;;;;;;;:38;;;;;;;;;;;;7691:17;:25;7709:6;7691:25;;;;;;;;;;;:34;;;;;;;;;;;;7740:17;:25;7758:6;7740:25;;;;;;;;;;;:37;;;7792:17;:25;7810:6;7792:25;;;;;;;;;;;:39;;;7616:226;;;;;;;;7467:383;;;;;:::o;503:27::-;;;;:::o;1158:105:12:-;587:5;;;;;;;;;;;573:19;;:10;:19;;;565:28;;;;;;;;1228:29;1247:9;1228:18;:29::i;:::-;1158:105;:::o;6346:132:2:-;6431:3;6411:17;:23;;;;6466:4;6445:18;:25;;;;6346:132;;:::o;1404:175:12:-;1496:1;1475:23;;:9;:23;;;;1467:32;;;;;;;;1539:9;1511:38;;1532:5;;;;;;;;;;;1511:38;;;;;;;;;;;;1564:9;1556:5;;:17;;;;;;;;;;;;;;;;;;1404:175;:::o;145:1581:1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.25;\r\n\r\nimport \"./interfaces/ICaelumMiner.sol\";\r\nimport \"./CaelumMasternodeImproved.sol\";\r\nimport \"./CaelumModifier.sol\";\r\n\r\ncontract CaelumMasternode is CaelumMasternodeImproved {\r\n\r\n    bool minerSet = false;\r\n    bool tokenSet = false;\r\n\r\n    /**\r\n     * @dev Use this to externaly call the _arrangeMasternodeFlow function. ALWAYS set a modifier !\r\n     */\r\n    function _externalArrangeFlow()  public {\r\n        _arrangeMasternodeFlow();\r\n    }\r\n\r\n    /**\r\n     * @dev Use this to externaly call the addMasternode function. ALWAYS set a modifier !\r\n     */\r\n    function _externalAddMasternode(address _received) external {\r\n        addMasternode(_received);\r\n    }\r\n\r\n    /**\r\n     * @dev Use this to externaly call the deleteMasternode function. ALWAYS set a modifier !\r\n     */\r\n    function _externalStopMasternode(address _received) external {\r\n        deleteMasternode(getLastPerUser(_received));\r\n    }\r\n\r\n    function getMiningReward() public view returns(uint) {\r\n        return ICaelumMiner(_contract_miner).getMiningReward();\r\n    }\r\n\r\n    address cloneDataFrom = 0x7600bF5112945F9F006c216d5d6db0df2806eDc6;\r\n\r\n    function getDataFromContract () onlyOwner public returns(uint) {\r\n\r\n        CaelumMasternode prev = CaelumMasternode(cloneDataFrom);\r\n        (uint epoch,\r\n        uint candidate,\r\n        uint round,\r\n        uint miningepoch,\r\n        uint globalreward,\r\n        uint powreward,\r\n        uint masternodereward,\r\n        uint usercounter) = prev.contractProgress();\r\n\r\n        //masternodeEpoch = epoch;\r\n        masternodeRound = round;\r\n        miningEpoch = miningepoch;\r\n        rewardsProofOfWork = powreward;\r\n        rewardsMasternode = masternodereward;\r\n\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\steve\\Documents\\GitHub\\CAELUM\\Caelum-token\\contracts\\CaelumMasternode.sol",
  "ast": {
    "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumMasternode.sol",
    "exportedSymbols": {
      "CaelumMasternode": [
        509
      ]
    },
    "id": 510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/interfaces/ICaelumMiner.sol",
        "file": "./interfaces/ICaelumMiner.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1901,
        "src": "28:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumMasternodeImproved.sol",
        "file": "./CaelumMasternodeImproved.sol",
        "id": 405,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1336,
        "src": "69:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumModifier.sol",
        "file": "./CaelumModifier.sol",
        "id": 406,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1417,
        "src": "111:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 407,
              "name": "CaelumMasternodeImproved",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1335,
              "src": "174:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CaelumMasternodeImproved_$1335",
                "typeString": "contract CaelumMasternodeImproved"
              }
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "174:24:1"
          }
        ],
        "contractDependencies": [
          1335,
          1416,
          2169
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509,
          1335,
          1416,
          2169
        ],
        "name": "CaelumMasternode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 411,
            "name": "minerSet",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "208:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 409,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "208:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 410,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "224:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 414,
            "name": "tokenSet",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "236:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 412,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "236:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 413,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "425:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 417,
                      "name": "_arrangeMasternodeFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "436:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "436:24:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the _arrangeMasternodeFlow function. ALWAYS set a modifier !\r",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalArrangeFlow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:1"
            },
            "scope": 509,
            "src": "385:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "646:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_received",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "671:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 426,
                      "name": "addMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "657:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "657:24:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the addMasternode function. ALWAYS set a modifier !\r",
            "id": 431,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalAddMasternode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_received",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "618:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:1"
            },
            "scope": 509,
            "src": "586:103:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "871:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 438,
                            "name": "_received",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "914:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 437,
                          "name": "getLastPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "899:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 436,
                      "name": "deleteMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "882:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "882:43:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the deleteMasternode function. ALWAYS set a modifier !\r",
            "id": 443,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalStopMasternode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "name": "_received",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "843:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:1"
            },
            "scope": 509,
            "src": "810:123:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "994:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 449,
                            "name": "_contract_miner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "1025:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 448,
                          "name": "ICaelumMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1012:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICaelumMiner_$1900_$",
                            "typeString": "type(contract ICaelumMiner)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1012:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICaelumMiner_$1900",
                          "typeString": "contract ICaelumMiner"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMiningReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1899,
                      "src": "1012:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "1005:54:1"
                }
              ]
            },
            "documentation": null,
            "id": 455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMiningReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "988:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "987:6:1"
            },
            "scope": 509,
            "src": "941:126:1",
            "stateMutability": "view",
            "superFunction": 1220,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 458,
            "name": "cloneDataFrom",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1075:66:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 456,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837363030624635313132393435463946303036633231366435643664623064663238303665446336",
              "id": 457,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1099:42:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7600bF5112945F9F006c216d5d6db0df2806eDc6"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "1213:508:1",
              "statements": [
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "name": "prev",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1226:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                        "typeString": "contract CaelumMasternode"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 465,
                        "name": "CaelumMasternode",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 509,
                        "src": "1226:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                          "typeString": "contract CaelumMasternode"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "cloneDataFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1267:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 467,
                      "name": "CaelumMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "1250:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CaelumMasternode_$509_$",
                        "typeString": "type(contract CaelumMasternode)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                      "typeString": "contract CaelumMasternode"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:55:1"
                },
                {
                  "assignments": [
                    472,
                    474,
                    476,
                    478,
                    480,
                    482,
                    484,
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1293:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1293:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 474,
                      "name": "candidate",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1314:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1314:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 476,
                      "name": "round",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1339:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1339:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 478,
                      "name": "miningepoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1360:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1360:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 480,
                      "name": "globalreward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1387:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 479,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1387:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 482,
                      "name": "powreward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1415:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1415:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 484,
                      "name": "masternodereward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1440:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1440:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 486,
                      "name": "usercounter",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1472:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 485,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 490,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "prev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "1492:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                          "typeString": "contract CaelumMasternode"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contractProgress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1286,
                      "src": "1492:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1292:223:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "masternodeRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1564:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "1582:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "miningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1598:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 496,
                      "name": "miningepoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "1612:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1598:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "rewardsProofOfWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1634:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "powreward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "1655:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1634:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "rewardsMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1675:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "masternodereward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "1695:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1675:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 460,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2117,
                  "src": "1182:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:1"
              }
            ],
            "name": "getDataFromContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "1207:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1206:6:1"
            },
            "scope": 509,
            "src": "1150:571:1",
            "stateMutability": "nonpayable",
            "superFunction": 1334,
            "visibility": "public"
          }
        ],
        "scope": 510,
        "src": "145:1581:1"
      }
    ],
    "src": "0:1728:1"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumMasternode.sol",
    "exportedSymbols": {
      "CaelumMasternode": [
        509
      ]
    },
    "id": 510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/interfaces/ICaelumMiner.sol",
        "file": "./interfaces/ICaelumMiner.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1901,
        "src": "28:39:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumMasternodeImproved.sol",
        "file": "./CaelumMasternodeImproved.sol",
        "id": 405,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1336,
        "src": "69:40:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/steve/Documents/GitHub/CAELUM/Caelum-token/contracts/CaelumModifier.sol",
        "file": "./CaelumModifier.sol",
        "id": 406,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 1417,
        "src": "111:30:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 407,
              "name": "CaelumMasternodeImproved",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1335,
              "src": "174:24:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CaelumMasternodeImproved_$1335",
                "typeString": "contract CaelumMasternodeImproved"
              }
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "174:24:1"
          }
        ],
        "contractDependencies": [
          1335,
          1416,
          2169
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509,
          1335,
          1416,
          2169
        ],
        "name": "CaelumMasternode",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 411,
            "name": "minerSet",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "208:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 409,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "208:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 410,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "224:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 414,
            "name": "tokenSet",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "236:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 412,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "236:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 413,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "252:5:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 420,
              "nodeType": "Block",
              "src": "425:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 417,
                      "name": "_arrangeMasternodeFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1135,
                      "src": "436:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "436:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 419,
                  "nodeType": "ExpressionStatement",
                  "src": "436:24:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the _arrangeMasternodeFlow function. ALWAYS set a modifier !\r",
            "id": 421,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalArrangeFlow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "425:0:1"
            },
            "scope": 509,
            "src": "385:83:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "646:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 427,
                        "name": "_received",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 423,
                        "src": "671:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 426,
                      "name": "addMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 688,
                      "src": "657:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "657:24:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the addMasternode function. ALWAYS set a modifier !\r",
            "id": 431,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalAddMasternode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 423,
                  "name": "_received",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "618:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "618:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "617:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:1"
            },
            "scope": 509,
            "src": "586:103:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 442,
              "nodeType": "Block",
              "src": "871:62:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 438,
                            "name": "_received",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 433,
                            "src": "914:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 437,
                          "name": "getLastPerUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "899:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "899:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 436,
                      "name": "deleteMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 761,
                      "src": "882:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "882:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "882:43:1"
                }
              ]
            },
            "documentation": "@dev Use this to externaly call the deleteMasternode function. ALWAYS set a modifier !\r",
            "id": 443,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_externalStopMasternode",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 433,
                  "name": "_received",
                  "nodeType": "VariableDeclaration",
                  "scope": 443,
                  "src": "843:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 432,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "842:19:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "871:0:1"
            },
            "scope": 509,
            "src": "810:123:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 454,
              "nodeType": "Block",
              "src": "994:73:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 449,
                            "name": "_contract_miner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1342,
                            "src": "1025:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 448,
                          "name": "ICaelumMiner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1900,
                          "src": "1012:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ICaelumMiner_$1900_$",
                            "typeString": "type(contract ICaelumMiner)"
                          }
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1012:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICaelumMiner_$1900",
                          "typeString": "contract ICaelumMiner"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getMiningReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1899,
                      "src": "1012:45:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () external returns (uint256)"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:47:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 447,
                  "id": 453,
                  "nodeType": "Return",
                  "src": "1005:54:1"
                }
              ]
            },
            "documentation": null,
            "id": 455,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMiningReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "965:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 446,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 455,
                  "src": "988:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 445,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "987:6:1"
            },
            "scope": 509,
            "src": "941:126:1",
            "stateMutability": "view",
            "superFunction": 1220,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 458,
            "name": "cloneDataFrom",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "1075:66:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 456,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307837363030624635313132393435463946303036633231366435643664623064663238303665446336",
              "id": 457,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1099:42:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x7600bF5112945F9F006c216d5d6db0df2806eDc6"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "1213:508:1",
              "statements": [
                {
                  "assignments": [
                    466
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 466,
                      "name": "prev",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1226:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                        "typeString": "contract CaelumMasternode"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 465,
                        "name": "CaelumMasternode",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 509,
                        "src": "1226:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                          "typeString": "contract CaelumMasternode"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 470,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 468,
                        "name": "cloneDataFrom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 458,
                        "src": "1267:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 467,
                      "name": "CaelumMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "1250:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_CaelumMasternode_$509_$",
                        "typeString": "type(contract CaelumMasternode)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                      "typeString": "contract CaelumMasternode"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:55:1"
                },
                {
                  "assignments": [
                    472,
                    474,
                    476,
                    478,
                    480,
                    482,
                    484,
                    486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 472,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1293:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 471,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1293:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 474,
                      "name": "candidate",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1314:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1314:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 476,
                      "name": "round",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1339:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 475,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1339:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 478,
                      "name": "miningepoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1360:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 477,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1360:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 480,
                      "name": "globalreward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1387:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 479,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1387:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 482,
                      "name": "powreward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1415:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 481,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1415:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 484,
                      "name": "masternodereward",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1440:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 483,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1440:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 486,
                      "name": "usercounter",
                      "nodeType": "VariableDeclaration",
                      "scope": 508,
                      "src": "1472:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 485,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 490,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 487,
                        "name": "prev",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 466,
                        "src": "1492:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CaelumMasternode_$509",
                          "typeString": "contract CaelumMasternode"
                        }
                      },
                      "id": 488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contractProgress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1286,
                      "src": "1492:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1492:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1292:223:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 491,
                      "name": "masternodeRound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 548,
                      "src": "1564:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 492,
                      "name": "round",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 476,
                      "src": "1582:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:23:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "miningEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1598:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 496,
                      "name": "miningepoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 478,
                      "src": "1612:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1598:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "1598:25:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "rewardsProofOfWork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 557,
                      "src": "1634:18:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 500,
                      "name": "powreward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 482,
                      "src": "1655:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1634:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "1634:30:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "rewardsMasternode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 559,
                      "src": "1675:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 504,
                      "name": "masternodereward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 484,
                      "src": "1695:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1675:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 461,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 460,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2117,
                  "src": "1182:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:9:1"
              }
            ],
            "name": "getDataFromContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1179:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 463,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 508,
                  "src": "1207:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1206:6:1"
            },
            "scope": 509,
            "src": "1150:571:1",
            "stateMutability": "nonpayable",
            "superFunction": 1334,
            "visibility": "public"
          }
        ],
        "scope": 510,
        "src": "145:1581:1"
      }
    ],
    "src": "0:1728:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xe8cb790c82a93c58a25d725dec1eb96ed4038be1",
      "transactionHash": "0xf9dbe00d9249d9b6398b06df7e15813fd946e5a436a4bde6184fedcf6f75e341"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-28T12:36:48.579Z"
}